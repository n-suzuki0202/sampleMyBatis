<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springmybatis.da.mapper.InquiryTagMapper">
    <resultMap id="Base_Result_Map" type="com.example.springmybatis.da.entity.InquiryTag">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="inquiry_id" property="inquiryId" jdbcType="INTEGER" />
      <result column="description" property="description" jdbcType="VARCHAR" />
      <result column="created" property="created" jdbcType="TIMESTAMP" />
    </resultMap>

    <select id="selectTagsByInquiryId" parameterType="int" resultMap="Base_Result_Map">
        select id, inquiry_id, description, created
        from inquiry_tag
        where inquiry_id = #{inquiryId}
        order by id
    </select>

    <resultMap id="View_Result_Map" type="com.example.springmybatis.da.entity.InquiryTagView" extends="Base_Result_Map">
      <association 
        property="inquiry"
        javaType="com.example.springmybatis.da.entity.Inquiry"
        select="com.example.springmybatis.da.mapper.InquiryMapper.find"
        column="inquiry_id" />
    </resultMap>
    
    <resultMap id="View2_Result_Map" type="com.example.springmybatis.da.entity.InquiryTagView" extends="Base_Result_Map">
      <association 
        property="inquiry"
        resultMap="com.example.springmybatis.da.mapper.InquiryMapper.Base_Result_Map"
        columnPrefix="i_" />
    </resultMap>


    <select id="find" parameterType="int" resultMap="Base_Result_Map">
      SELECT id, inquiry_id, description, created
        FROM inquiry_tag
       WHERE id = #{id}
    </select>


    <select id="select" parameterType="com.example.springmybatis.da.query.InquiryTagSelectQuery" resultMap="Base_Result_Map">
      SELECT id, inquiry_id, description, created
        FROM inquiry_tag
      <where>
        <if test="inquiryIds != null and !inquiryIds.isNotEmpty()">
          and inquiry_id in 
          <foreach item="inquiryId" collection="inquiryIds" open="(" separator="," close=")">
            #{inquiryId}
          </foreach>
        </if>
        <if test="description != null">
          and description like #{description}
        </if>
        <if test="fromCreated != null">
          and fromCreated &gt; = #{fromCreated}
        </if>
        <if test="toCreated != null">
          and toCreated &lt; = #{toCreated}
        </if>
      </where>
      <trim prefix="order by">${orderBy}</trim>
    </select>


    <insert id="insert" parameterType="com.example.springmybatis.da.entity.InquiryTag" keyProperty="id" useGeneratedKeys="true">
      INSERT INTO inquiry_tag(inquiry_id, description, created)
      VALUES (#{inquiryId}, #{description}, #{created})
    </insert>



    <update id="update" parameterType="com.example.springmybatis.da.entity.InquiryTag">
      UPDATE inquiry_tag
      <set>
        inquiry_id = #{inquiryId},
        description = #{description},
        created = #{created},
      </set>
       WHERE id = #{id}
    </update>


    <delete id="delete" parameterType="int">
      DELETE FROM inquiry_tag
       WHERE id = #{id}
    </delete>


    <select id="findView" parameterType="int" resultMap="View_Result_Map">
      SELECT id, inquiry_id, description, created
        FROM inquiry_tag
       WHERE id = #{id}
    </select>

    <select id="findView2" parameterType="int" resultMap="View2_Result_Map">
      SELECT t.id, t.inquiry_id, t.description, t.created,
             i.id i_id, i.user_id i_userId, i.contents i_contents, i.invalid i_invalid, i.created i_created
        FROM inquiry_tag t
       INNER JOIN inquiry i on t.inquiry_id = i.id
       WHERE t.id = #{id}
    </select>


</mapper>
